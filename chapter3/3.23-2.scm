;;; doubley link solution with O(1)

(define (make-deque) (cons (cons '() '())
                           (cons '() '())))
(define (empty-deque? deque) (null? (front-ptr (forward deque))))
(define (forward-deque deque-controller)
  (if (pair? (car deque))
      (caar deque)
      (error "ERROR forward -- deque not have a forward list" reque)))
(define (reverse-deque deque-controller)
  (if (pair? (cdr deque))
      (cadr deque)
      (error "ERROR reverse -- deque not have a reverse list" deque)))
(define (front-deque deque) (car deque))
(define (rear-deque deque) (cdr deque))
(define (front-insert-deque! deque)
  (let ((new-pair (cons item '())))
    ))
