;;; 递归
(define (f-rec n)
    (if (< n 3) 
        n
        (+ (f-rec (- n 1)) (* (f-rec (- n 2)) 2) (* (f-rec (- n 3)) 3))))

;;; 迭代
(define (f-iter n)
    (define (iter a b c n)
        (if (< n 3)
            a
            (iter b c (+ c (* 2 b) (* 3 a))(- n 1))))
    (iter 0 1 2 n))


;;; 可以得出 递归 方法比 迭代 方法慢非常多，而且递归算到25以上就不行了
;;; 迭代方式却可以算到上万！！！
;;; 测试了下迭代方法计算 100000 和 递归 计算25的时间相当！！！