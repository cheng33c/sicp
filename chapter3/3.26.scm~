(define (make-table)
  (let ((local-table (list '*table*)))
    (define (compare a b)
      (cond ((and (number? a) (number? b))
	     (if (> a b) true false))))
    (define (assoc key records)
      (cond ((null? records) false)
	    ((equal? key (caar records)) (car records))
	    (else (assoc key (cdr records)))))
    (define (lookup key-tree)
      (define (iter keys table)
	(cond ((null? keys) false)
	      ((null? (cdr keys))
	       (let ((record (assoc (car keys) (cdr table))))
		 (if record
		     (cdr record)
		     (error "error lookup: can't find key " key))))
	      (else
	       (let ((subtable (assoc (car keys) (cdr table))))
		 (if subtable
		     (iter (cdr key) ())))))))))
