#lang planet neil/sicp
(define (even? n) (= (remainder n 2) 0))
(define (double x) (* 2 x))
(define (halve x) ((even? x) (/ x 2)))

(define (fast-expt-add b n)
  (define (fast-expt a b n)
    (cond ((= n 0) a)
          ((even? n) (fast-expt (double a) b (halve n)))
          (else (fast-expt (+ a b) b (- n 1)))))
  (fast-expt-add 5 3))